import numpy as np
import pandas as pd
import random
import matplotlib.pyplot as ploty
import time
import math
from numpy.linalg import inv
from sklearn.feature_extraction import DictVectorizer as DVec
from sklearn import preprocessing
dataset = pd.read_csv("traindata.csv", header = None,delimiter=',')


# dataset = dataset.T.to_dict().values()
# vec = DVec(sparse=False)
# vec_x = vec.fit_transform(dataset)
# dataset = vec_x


dataset = pd.DataFrame(pd.get_dummies(dataset))

dataset1 = dataset.sample(frac=0.9)
dataset_test = dataset.loc[~dataset.index.isin(dataset1.index)]
y_test = np.array(dataset_test[dataset_test.columns[dataset_test.shape[1]-4]]) 


dataset1 = np.array(dataset[dataset.columns[0:dataset.shape[1]-2]])
Y_train = np.array(dataset[dataset.columns[dataset.shape[1]-1]])


dataset_test = np.array(dataset_test[dataset_test.columns[0:dataset_test.shape[1]-2]])


scaler = preprocessing.StandardScaler(copy=True, with_mean=True, with_std=True).fit(dataset1)
X = scaler.transform(dataset1)
X = [[1] + x for x in X]
X =np.array(X)

scaler1 = preprocessing.StandardScaler(copy=True, with_mean=True, with_std=True).fit(dataset_test)
X_test = scaler.transform(dataset_test)
X_test = [[1] + x for x in X_test]
X_test =np.array(X_test)

# X=np.delete(X, 2, axis=1)          
# X=np.delete(X, 4, axis=1)          
	

def mylinridgereg(X, Y, lamda):
	X_T=np.transpose(X)
	Id = np.ones((len(X[0]),len(X[0])))
	temp = np.dot(X_T,X)+(Id*lamda)
	invF  = inv(temp)
	weights = np.dot(np.dot(invF,X_T),Y)
	return weights


def mylinridgeregeval(X, weights):
	predict = np.dot(X,weights)
	return predict	

def meansquarederr(T, Tdash):
	arr=[]
	for i in range(len(T)):
		arr.append((T[i]-Tdash[i])**2)
		mean_sq=(sum(arr)/len(T))
		mean_sq=np.sqrt(mean_sq)
	return mean_sq
lam = 50
wts = mylinridgereg(X,Y_train,lam)
maxy= np.amax(wts)

preds = mylinridgeregeval(X,wts)
sq_err = meansquarederr(Y_train,preds)
preds_test = mylinridgeregeval(X_test,wts)
sq_err_test = meansquarederr(y_test,preds_test)

x =[0.5,0.6,0.7,0.8,0.85,0.9]
# y = [0.432841282736,0.423655441376,0.420855458469,0.426461808639,0.426202126885,0.416217363187]
y = [20,30,5,10,40,50]
ploty.xlabel('partion fraction')
ploty.ylabel('lamda')
ploty.ylim(1,60)
ploty.xlim(0.5,1)
# ploty.plot(preds,Y_train, color='blue', linestyle='dashed',marker='x')
# ploty.plot(preds_test,y_test, color='red', linestyle='dashed',marker='x')
ploty.plot(x,y, color='red', linestyle='dashed',marker='x')
ploty.savefig("plotminsqerrvsl.png")



